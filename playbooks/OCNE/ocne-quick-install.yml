#
# Oracle Linux Automation Manager
#
# Copyright (c) 2022 Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at
# https://oss.oracle.com/licenses/upl.
#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Description: Ansible playbook to setup the OCNE Operator node.
#
# yamllint disable

---

- name: Add passwordless ssh for hosts
  hosts: ocne_op 
  become: yes
  become_method: sudo

  tasks:

  - name: generate a unique OpenSSH keypair for passwordless ssh
    community.crypto.openssh_keypair:
      path: '/home/{{ ansible_user }}/.ssh/id_ocne_rsa'
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: '0600'

  - name: fetch the unique OpenSSH public key
    run_once: yes
    fetch:
      src: '/home/{{ ansible_user }}/.ssh/id_ocne_rsa.pub'
      dest: buffer/
      flat: yes

  - name: Enable Strict Host Key Checking
    copy:
      dest: "/home/{{ ansible_user }}/.ssh/config"
      owner: "{{ ansible_user }}"
      group: "{{ ansible_user }}"
      mode: 0644
      content: |
        Host *
          StrictHostKeyChecking no
          UserKnownHostsFile=/dev/null

- name: SSH and DNF pre-requisites
  hosts: ocne_op ocne_kube_control ocne_kube_worker 
  become: yes
  become_method: sudo
  vars:
   - proxy: "{{ use_proxy | default('false') }}"

  tasks:

  - name: Set authorized key for passwordless ssh 
    authorized_key:
      user: "{{ ansible_user }}"
      state: present
      key: "{{ lookup('file', 'buffer/id_ocne_rsa.pub') }}"

  - name: Add proxy config to dnf.conf
    lineinfile:
      path: /etc/dnf/dnf.conf
      line: "proxy={{ my_https_proxy }}"
      state: present
    when:
    - proxy == true

  - name: Workaround for ol8_developer channels not available bug
    dnf:
      name: oraclelinux-developer-release-el8
      state: latest
    ignore_errors: yes


- name: Configures repositories and install ocnectl on Operator Node
  hosts: ocne_op
  become: yes
  become_method: sudo
  vars:
   - ocne_v: "{{ ocne_version | default('ocne16') }}"

  tasks:

  - name: Install oracle-olcne-release-el8 RPM
    dnf:
      name: oracle-olcne-release-el8
      state: latest
    ignore_errors: yes

  - name: Enable the OL8 repos for OCNE 1.6
    shell: |
           dnf config-manager --enable ol8_olcne16 ol8_addons ol8_baseos_latest ol8_appstream ol8_kvm_appstream ol8_UEKR7
    when:
    - ocne_v == "ocne16"

  - name: Disable OL8 older olcne repos for OCNE 1.6
    shell: |
           dnf config-manager --disable ol8_olcne15 ol8_olcne14 ol8_olcne13 ol8_olcne12 ol8_developer
    ignore_errors: yes
    when:
    - ocne_v == "ocne16"

  - name: Enable the OL8 repos for OCNE 1.5
    shell: |
           dnf config-manager --enable ol8_olcne15 ol8_addons ol8_baseos_latest ol8_appstream ol8_kvm_appstream ol8_UEKR7
    when:
    - ocne_v == "ocne15"

  - name: Disable OL8 older olcne repos for OCNE 1.5
    shell: |
           dnf config-manager --disable ol8_olcne14 ol8_olcne13 ol8_olcne12 ol8_developer
    ignore_errors: yes
    when:
    - ocne_v == "ocne15"

  - name: Install olcnectl RPM
    dnf:
      name: olcnectl
      state: latest
    ignore_errors: yes


- name: Provision OCNE cluster with Quick install and configuration file
  hosts: ocne_op
  gather_facts: true
  vars:
   - operator_str: "{{ansible_fqdn}}:8091"
   - proxy: "{{ use_proxy | default('false') }}"

  tasks:

  - name: Download OCNE configuration file to operator node 
    ansible.builtin.get_url:
      url: "{{ env_file_url }}"
      dest: "~/{{ env_file }}"

  - name: Quick install with configuration file
    command: olcnectl provision --ssh-identity-file ~/.ssh/id_ocne_rsa --yes --timeout 20 \
           --ssh-login-name "{{ ansible_user }}" \
           --config-file "~/{{ env_file }}"
    when:
      - proxy == false

  - name: Quick install with configuration file and proxy enabled
    command: olcnectl provision --ssh-identity-file ~/.ssh/id_ocne_rsa --yes --timeout 20 \
           --ssh-login-name "{{ ansible_user }}" \
           --http-proxy  "{{ my_http_proxy }}" \
           --https-proxy "{{ my_https_proxy }}" \
           --no-proxy "{{ my_no_proxy }}" \
           --config-file "~/{{ env_file }}"
    when:
      - proxy == true

  - name: Update global flag configuration for environment 
    command: olcnectl module instances \ 
           --api-server {{ operator_str }} \ 
           --environment-name {{ ocne_environment }} \ 
           --update-config

- name: Set up kubectl on the Master Node
  hosts: ocne_kube_control
  gather_facts: false

  tasks:
  - name: Set up kubectl
    shell: |
            rm $HOME/.kube/config
            mkdir -p $HOME/.kube
            sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
            sudo chown $(id -u):$(id -g) $HOME/.kube/config
            echo 'export KUBECONFIG=$HOME/.kube/config' >> $HOME/.bashrc
